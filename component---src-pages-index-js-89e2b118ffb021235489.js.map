{"version":3,"sources":["webpack:///./src/components/Card.js","webpack:///./src/pages/index.js"],"names":["Card","props","image","data","node","thumbnail","childImageSharp","fluid","originalImg","pageName","name","React","createElement","className","postClass","style","backgroundImage","Link","to","BlogIndex","_ref","location","siteTitle","site","siteMetadata","title","siteLogo","logo","subPages","allDataJson","console","log","postCounter","Layout","SEO","keywords","description","edges","map","pages","key","count","StaticQuery","query","render","Object","assign"],"mappings":"0MAmDeA,MAhDf,SAAcC,GAyBZ,MAAMC,EAAQD,EAAME,KAAKC,KAAKC,UAAUC,gBAAgBC,MAAMC,YACxDC,EAAWR,EAAME,KAAKC,KAAKM,KAEjC,OACEC,IAAAC,cAAA,WACEC,UAAY,cAAaZ,EAAMa,aAC7BZ,EAAS,aAAe,aAE1Ba,MACEb,GAAS,CACPc,gBAAkB,OAAMd,OAI5BS,IAAAC,cAACK,OAAI,CAACJ,UAAU,gCAAgCK,GAAG,KACjDP,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBJ,OClC3C,MAAMU,EAAYA,CAAAC,EAAWC,KAAc,IAAxB,KAAElB,GAAMiB,EACzB,MAAME,EAAYnB,EAAKoB,KAAKC,aAAaC,MACnCC,EAAWvB,EAAKoB,KAAKC,aAAaG,KAClCC,EAAWzB,EAAK0B,YACtBC,QAAQC,IAAIL,GAEZ,IAAIM,EAAc,EAElB,OACErB,IAAAC,cAACqB,IAAM,CAACR,MAAOH,GACbX,IAAAC,cAACsB,IAAG,CACFT,MAAM,YACNU,SAAU,CAAE,OAAQ,SAAU,aAAc,WAG7ChC,EAAKoB,KAAKC,aAAaY,aACtBzB,IAAAC,cAAA,UAAQC,UAAU,aAChBF,IAAAC,cAAA,MAAIC,UAAU,QAAQS,GACtBX,IAAAC,cAAA,MAAIC,UAAU,mBACXV,EAAKoB,KAAKC,aAAaY,cAI9BzB,IAAAC,cAAA,OAAKC,UAAU,aACZe,EAASS,MAAMC,IAAIC,IAClBP,IAGErB,IAAAC,cAACZ,EAAI,CACHwC,IAAKR,EACLS,MAAOT,EACP7B,KAAMoC,EACNzB,UAAY,cAmCXb,aACbU,IAAAC,cAAC8B,cAAW,CACVC,MA5BY,YA6BZC,OAAQzC,GACNQ,IAAAC,cAACO,EAAS0B,OAAAC,OAAA,CAACzB,SAAUpB,EAAMoB,SAAUpB,OAAK,EAACE,KAAMA,GAAUF,O","file":"component---src-pages-index-js-89e2b118ffb021235489.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nfunction Card(props) {\n  // const image = useStaticQuery(graphql`\n  // query ImageQuery {\n  //     file(absolutePath: {eq: \"/${props.data.regex}/\"}) {\n  //       childImageSharp {\n  //         fluid {\n  //           ...GatsbyImageSharpFluid\n  //         }\n  //       }\n  //     }\n  //   }\n  // `)\n\n  //   const data = useStaticQuery(graphql`\n  //   query HeaderQuery {\n  //     file(absolutePath: {eq: \"/${props.data.regex}/\"}) {\n  //       childImageSharp {\n  //         fluid {\n  //           ...GatsbyImageSharpFluid\n  //         }\n  //       }\n  //     }\n  //   }\n  // `)\n\n  const image = props.data.node.thumbnail.childImageSharp.fluid.originalImg\n  const pageName = props.data.node.name\n\n  return (\n    <article\n      className={`post-card  ${props.postClass} ${\n        image ? `with-image` : `no-image`\n      }`}\n      style={\n        image && {\n          backgroundImage: `url(${image})`,\n        }\n      }\n    >\n      <Link className=\"post-card-link cursor-pointer\" to=\"/\">\n        <div className=\"post-card-content\">\n          <h2 className=\"post-card-title\">{pageName}</h2>\n        </div>\n      </Link>\n    </article>\n  )\n}\n\nexport default Card\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\nimport Card from \"../components/Card\"\n\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const siteLogo = data.site.siteMetadata.logo\n  const subPages = data.allDataJson\n  console.log(siteLogo)\n\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h1 className=\"mb-0\">{siteTitle}</h1>\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {subPages.edges.map(pages => {\n          postCounter++\n\n          return (\n            <Card\n              key={postCounter}\n              count={postCounter}\n              data={pages}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allDataJson {\n      edges {\n        node {\n          name\n          thumbnail {\n            childImageSharp {\n              fluid {\n                originalImg\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}