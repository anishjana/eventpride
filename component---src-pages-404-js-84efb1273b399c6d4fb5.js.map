{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["SEO","_ref","description","lang","meta","keywords","title","site","useStaticQuery","metaDescription","siteMetadata","React","createElement","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","NotFoundPage","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","siteTitle","Layout","location","Component"],"mappings":"2FAAA,0DAYA,SAASA,EAAGC,GAAgD,IAA/C,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,GAAOL,EACvD,MAAM,KAAEM,GAASC,yBAAe,YAc1BC,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACES,IAAAC,cAACC,IAAM,CACLC,eAAgB,CACdX,QAEFG,MAAOA,EACPS,cAAgB,IAAGR,EAAKG,aAAaJ,MACrCF,KAAM,CACJ,CACEY,KAAO,cACPC,QAASR,GAEX,CACES,SAAW,WACXD,QAASX,GAEX,CACEY,SAAW,iBACXD,QAASR,GAEX,CACES,SAAW,UACXD,QAAU,WAEZ,CACED,KAAO,eACPC,QAAU,WAEZ,CACED,KAAO,kBACPC,QAASV,EAAKG,aAAaS,QAE7B,CACEH,KAAO,gBACPC,QAASX,GAEX,CACEU,KAAO,sBACPC,QAASR,IAGVW,OACCf,EAASgB,OAAS,EACd,CACEL,KAAO,WACPC,QAASZ,EAASiB,KAAM,OAE1B,IAELF,OAAOhB,KAKhBJ,EAAIuB,aAAe,CACjBpB,KAAO,KACPC,KAAM,GACNC,SAAU,GACVH,YAAc,IAWDF,O,sGC9FoB,IAE7BwB,EAAY,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAYf,OAZeC,YAAAJ,EAAAC,GAAAD,EAAAK,UAChBC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAYH,EAAKxB,KAAKG,aAAaJ,MAEzC,OACEK,IAAAC,cAACuB,IAAM,CAACC,SAAUJ,KAAKC,MAAMG,SAAU9B,MAAO4B,GAC5CvB,IAAAC,cAACZ,IAAG,CAACM,MAAM,mBACXK,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,SAAG,6DAGRY,EAZe,CAASb,IAAM0B,WAelBb","file":"component---src-pages-404-js-84efb1273b399c6d4fb5.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={` ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}